<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Yi.Framework.ApiMicroservice</name>
    </assembly>
    <members>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.AccountController.Login(Yi.Framework.Model.Models.user)">
            <summary>
            登录方法，要返回data:{user,token} token先写123456789,不要有导航属性
            </summary>
            <param name="_user"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.AccountController.Logout">
            <summary>
            不用写，单纯制作日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.AccountController.Register(Yi.Framework.Model.Models.user,System.String)">
            <summary>
            code为验证码,判断一下，假装验证码都是对的
            </summary>
            <param name="_user"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.AccountController.Email(System.String)">
            <summary>
            传入邮箱，需要先到数据库判断该邮箱是否被人注册过，到userservice写mail_exist方法，还有接口别忘了。这个接口不需要洞，只需要完成userservice写mail_exist与接口即可
            </summary>
            <param name="emailAddress"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MenuController.UpdateMenu(Yi.Framework.Model.Models.menu)">
            <summary>
            更
            </summary>
            <param name="_menu"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MenuController.DelListMenu(System.Collections.Generic.List{System.Int32})">
            <summary>
            删
            </summary>
            <param name="_ids"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MenuController.AddMenu(Yi.Framework.Model.Models.menu)">
            <summary>
            增
            </summary>
            <param name="_menu"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MouldController.UpdateMould(Yi.Framework.Model.Models.mould)">
            <summary>
            更
            </summary>
            <param name="_mould"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MouldController.DelListMould(System.Collections.Generic.List{System.Int32})">
            <summary>
            删
            </summary>
            <param name="_ids"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MouldController.AddMould(Yi.Framework.Model.Models.mould)">
            <summary>
            增
            </summary>
            <param name="_mould"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.RoleController.UpdateRole(Yi.Framework.Model.Models.role)">
            <summary>
            更
            </summary>
            <param name="_role"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.RoleController.DelListRole(System.Collections.Generic.List{System.Int32})">
            <summary>
            删
            </summary>
            <param name="_ids"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.RoleController.AddRole(Yi.Framework.Model.Models.role)">
            <summary>
            增
            </summary>
            <param name="_role"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.GetUser">
            <summary>
            查
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.UpdateUser(Yi.Framework.Model.Models.user)">
            <summary>
            更
            </summary>
            <param name="_user"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.DelListUser(System.Collections.Generic.List{System.Int32})">
            <summary>
            删
            </summary>
            <param name="_ids"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.AddUser(Yi.Framework.Model.Models.user)">
            <summary>
            增
            </summary>
            <param name="_user"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.GetMenuMould">
            <summary>
            通过上下文对象获取user（注意，_user下只有userId），返回值为该用户下所有的menu，(注意子类递归)并且需要关联mould
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yi.Framework.ApiMicroservice.Utility.CustomHostingStartup">
            <summary>
            必须实现IHostingStartup接口
            必须标记HostingStartup特性
            
            就像木马一样
            </summary>
        </member>
    </members>
</doc>
