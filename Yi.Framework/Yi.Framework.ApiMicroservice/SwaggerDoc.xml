<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Yi.Framework.ApiMicroservice</name>
    </assembly>
    <members>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.AccountController.Login(Yi.Framework.Model.Models.user)">
            <summary>
            登录方法，要返回data:{user,token} token
            </summary>
            <param name="_user"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.AccountController.Logout">
            <summary>
            不用写，单纯制作日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.AccountController.Register(Yi.Framework.Model.Models.user,System.String)">
            <summary>
            code为验证码,判断一下，假装验证码都是对的
            </summary>
            <param name="_user"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.AccountController.Email(System.String)">
            <summary>
            传入邮箱，需要先到数据库判断该邮箱是否被人注册过，到userservice写mail_exist方法，还有接口别忘了。这个接口不需要洞，只需要完成userservice写mail_exist与接口即可
            </summary>
            <param name="emailAddress"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.AccountController.ChangePassword(Yi.Framework.DTOModel.ChangePwdDto)">
            <summary>
            修改密码
            </summary>
            <param name="pwdDto"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.FileController.Upload(System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            该方法不对外暴露
            </summary>
            <param name="type"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MenuController.GetMenuInMould">
            <summary>
            这个是要递归的，但是要过滤掉删除的，所以，可以写一个通用过滤掉删除的方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MenuController.UpdateMenu(Yi.Framework.Model.Models.menu)">
            <summary>
            更
            </summary>
            <param name="_menu"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MenuController.DelListMenu(System.Collections.Generic.List{System.Int32})">
            <summary>
            删
            </summary>
            <param name="_ids"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MenuController.AddTopMenu(Yi.Framework.Model.Models.menu)">
            <summary>
            增
            现在，top菜单只允许为一个
            </summary>
            <param name="_menu"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MenuController.SetMouldByMenu(Yi.Framework.DTOModel.IdDto{System.Int32})">
            <summary>
            给一个菜单设置一个接口,Id1为菜单id,Id2为接口id
            用于给菜单设置接口
            </summary>
            <param name="idDto"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MenuController.AddChildrenMenu(Yi.Framework.DTOModel.ChildrenDto{Yi.Framework.Model.Models.menu})">
            <summary>
            给一个菜单添加子节点（注意：添加，不是覆盖）
            </summary>
            <param name="childrenDto"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MenuController.GetTopMenusByHttpUser">
            <summary>
            获取用户的目录菜单，不包含接口
            用于账户信息页面，显示这个用户有哪些菜单，需要并列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MouldController.UpdateMould(Yi.Framework.Model.Models.mould)">
            <summary>
            更
            </summary>
            <param name="_mould"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MouldController.DelListMould(System.Collections.Generic.List{System.Int32})">
            <summary>
            删
            </summary>
            <param name="_ids"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.MouldController.AddMould(Yi.Framework.Model.Models.mould)">
            <summary>
            增
            </summary>
            <param name="_mould"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.RoleController.UpdateRole(Yi.Framework.Model.Models.role)">
            <summary>
            更
            </summary>
            <param name="_role"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.RoleController.DelListRole(System.Collections.Generic.List{System.Int32})">
            <summary>
            删
            </summary>
            <param name="_ids"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.RoleController.AddRole(Yi.Framework.Model.Models.role)">
            <summary>
            增
            </summary>
            <param name="_role"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.RoleController.GetRolesByUserId(System.Int32)">
            <summary>
            根据用户id得到该用户有哪些角色
            用于显示用户详情中的角色说明
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.RoleController.SetMenuByRole(Yi.Framework.DTOModel.IdsListDto{System.Int32})">
            <summary>
            给角色设置菜单，多个角色与多个菜单，让每一个角色都设置，ids1为角色，ids2为菜单
            用于设置角色
            </summary>
            <param name="idsListDto"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.RoleController.GetTopMenusByRoleId(System.Int32)">
            <summary>
            用于给角色设置菜单的时候，点击一个角色，显示这个角色拥有的并列的菜单
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.SettingController.GetSetting">
            <summary>
            查
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.SettingController.UpdateSetting(Yi.Framework.DTOModel.SettingDto)">
            <summary>
            更
            </summary>
            <param name="settingDto"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.GetUser">
            <summary>
            查
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.UpdateUser(Yi.Framework.Model.Models.user)">
            <summary>
            更
            </summary>
            <param name="_user"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.DelListUser(System.Collections.Generic.List{System.Int32})">
            <summary>
            删
            </summary>
            <param name="_ids"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.AddUser(Yi.Framework.Model.Models.user)">
            <summary>
            增
            </summary>
            <param name="_user"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.SetRoleByUser(Yi.Framework.DTOModel.IdsListDto{System.Int32})">
            <summary>
            给多个用户设置多个角色，ids有用户id与 角色列表ids，多对多,ids1用户,ids2为角色
            用户设置给用户设置角色
            </summary>
            <param name="idsListDto"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.GetUserInRolesByHttpUser">
            <summary>
            根据http上下文的用户得到该用户信息，关联角色
            用于显示账号信息页中的用户信息和角色信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.GetMenuByHttpUser">
            <summary>
            得到登录用户的递归菜单，放到导航栏
            用户放到导航栏中
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.ApiMicroservice.Controllers.UserController.GetAxiosByRouter(System.String)">
            <summary>
            得到请求模型
            </summary>
            <param name="router"></param>
            <returns></returns>
        </member>
    </members>
</doc>
